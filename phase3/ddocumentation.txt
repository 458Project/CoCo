Phase 3 Documentation

Team Members : Clara Fu, Parv Mital, Johan Cornelissen, Mitchell Waite
Group: cisc458n 

*********For manual testing:*********
ssltrace "ptc -L ../../../../ptsrc/lib/pt -o3 -t3 qubySimpleRept.pt" ../../../../ptsrc/lib/pt/semantic.def | egrep '^ *[\.o%]'

The goal of these modifications is to convert the Semantic Analyzer of the PT Pascal compiler into the Semantic Analyzer for Quby. A detailed listing of all the changes made are listed below. They follow the order of the checklist provided in the assignment documentation, adjusted where applicable.

1. Input Tokens
   - The semantic analyzer input tokens in semantic.ssl were modified to match the output tokens from the parser
   - The input, error, operational, type tokens were updated in semantic.pt to match the tokens seen in semantic.def

2. T-Codes
   - All char T-codes were replaced with string T-Codes
   - Changed char T-codes in SSL source to use string T-coded
   - Removed rep T-codes
   - Added tCaseElse and tWhileOnBreak
   - Added tConcatenate, tSubstring, tLength, tIndex, tStringEqual

3. String Size
   - Added stringSize definition to the type Integer

4. StdType
   - Changed stdChar to stdString

7. TypeKind (Incomplete)
   - Changed tpChar to tpString
   - Commented out tpPackedArray
    **** TODO do we need to keep tpPackedArray? ****

8. TrapKind
   - Changed the names of trWriteChar and trReadChar to trWriteString and trReadString
   - Removed redundant trWriteString
   - Changed trap numbers for trWriteString and trReadString to 109 and 108 respectively
   - Changed all uses of char traps to string traps

10. Con definitions
   - Removed S/SL cycle from ConstantDefinitions to prevent multiple identifier/value pairs per 'con'

14. Rep Statements
   - Changed the WhileStmt rule to RepStmt and other similar name changes as required
   - Added the support for conditional exit using Quby RepOnBreak
   - In RepStmt rule, added a call to Statement rule before the sRepOnBreak

16. Ternary Operators (Incomplete)
   - Added TernaryOperator with an empty rule for sSubstring
   - Added entry for @TernaryOperator to Expression

17. String Concat w/ sAdd
   - Added handling of string concat within BinaryOperator by adding a rule to sAdd

18. String length operation
   - added handling of sLen to UnaryOperator
   - added check to ensure the type on the type stack is tpString

19. String Literal & T-codes (Incomplete)
   - Commented out tStringDescriptor and tSkipString
