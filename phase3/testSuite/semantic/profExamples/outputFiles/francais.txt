   .tLiteralInteger
   oEmitValue
   .tLiteralAddress
   oEmitDataAddress
   .tFileDescriptor
   .tLiteralInteger
   oEmitValue
   .tLiteralAddress
   oEmitDataAddress
   .tFileDescriptor
     .tWhileBegin
         .tWriteBegin
           .tTrapBegin
           .tLiteralAddress
           oEmitValue
           .tVarParm
           .tParmEnd
             .tLiteralString
             oEmitValue
             oEmitString
           .tParmEnd
            .tLiteralInteger
            oEmitValue
            .tParmEnd
            .tTrap
            oEmitTrapKind(trWriteString)
          .tWriteEnd
         .tTrapBegin
          .tLiteralAddress
          oEmitValue
          .tVarParm
          .tParmEnd
         .tTrap
         oEmitTrapKind(trWriteln)
         .tReadBegin
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          .tVarParm
          .tParmEnd
           .tLiteralAddress
           oEmitValue
          .tVarParm
          .tParmEnd
           .tTrap
           oEmitTrapKind(trReadString)
          .tReadEnd
         .tTrapBegin
          .tLiteralAddress
          oEmitValue
          .tVarParm
          .tParmEnd
         .tTrap
         oEmitTrapKind(trWriteln)
         .tWriteBegin
           .tTrapBegin
           .tLiteralAddress
           oEmitValue
           .tVarParm
           .tParmEnd
             .tLiteralString
             oEmitValue
             oEmitString
           .tParmEnd
            .tLiteralInteger
            oEmitValue
            .tParmEnd
            .tTrap
            oEmitTrapKind(trWriteString)
          .tWriteEnd
         .tTrapBegin
          .tLiteralAddress
          oEmitValue
          .tVarParm
          .tParmEnd
         .tTrap
         oEmitTrapKind(trWriteln)
         .tAssignBegin
          .tLiteralAddress
          oEmitValue
            .tLiteralAddress
            oEmitValue
            .tFetchString
           .tLiteralInteger
           oEmitValue
            .tLiteralAddress
            oEmitValue
            .tFetchString
           .tLiteralInteger
           oEmitValue
           .tSubtract
             #eTypeMismatch
           #eStringExpnReqd
           #eIntegerExpnReqd
           .tSubstring
### Semantic assertion 16 failed: less than two types in type stack in oTypeStkSwap

Errors reported by compiler: 
semantic error, line 15: type clash
semantic error, line 15: String type expression required
semantic error, line 16: integer type expression required
### Semantic assertion 16 failed: less than two types in type stack in oTypeStkSwap
