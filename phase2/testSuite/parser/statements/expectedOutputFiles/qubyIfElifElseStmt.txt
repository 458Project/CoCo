@Program
 ?pExt (pExt)
 .sProgram
 ?pIdentifier (pIdentifier)
 .sIdentifier
 [ (pIf)
 | *:
 ] or >
 .sParmEnd
 @Block
  [ (pIf)
  | *:
  ] or >
  @BeginStmt
   .sBegin
   @Statement
    [ (pIf)
    | pIf:
    @IfStmt
     .sIfStmt
     @Expression
      @SimpleExpression
       [ (pIdentifier)
       | *:
       @Term
        @Factor
         [ (pIdentifier)
         | pIdentifier:
         .sIdentifier
         @IdentifierExtension
          [ (pDoubleEquals)
          | *:
          >>
         ;IdentifierExtension
         ] or >
         >>
        ;Factor
        [ (pDoubleEquals)
        | *:
        ] or >
        >>
       ;Term
       [ (pDoubleEquals)
       | *:
       ] or >
       >>
      ;SimpleExpression
      [ (pDoubleEquals)
      | pDoubleEquals:
      @SimpleExpression
       [ (pInteger)
       | *:
       @Term
        @Factor
         [ (pInteger)
         | pInteger:
         .sInteger
         ] or >
         >>
        ;Factor
        [ (pColon)
        | *:
        ] or >
        >>
       ;Term
       [ (pColon)
       | *:
       ] or >
       >>
      ;SimpleExpression
      .sEq
      ] or >
      >>
     ;Expression
     .sExpnEnd
     .sThen
     ?pColon (pColon)
     @BeginStmt
      .sBegin
      @Statement
       [ (pIdentifier)
       | pIdentifier:
       @AssignmentOrCallStmt
        [ (pElif)
        | *:
        @CallStmt
         .sCallStmt
         .sIdentifier
         [ (pElif)
         | *:
         .sParmEnd
         >>
        ;CallStmt
        >>
       ;AssignmentOrCallStmt
       ] or >
       >>
      ;Statement
      [ (pElif)
      | *:
      ] or >
      .sEnd
      >>
     ;BeginStmt
     [ (pElif)
     | pElif:
     .sElse
     .sBegin
     @IfStmt
      .sIfStmt
      @Expression
       @SimpleExpression
        [ (pIdentifier)
        | *:
        @Term
         @Factor
          [ (pIdentifier)
          | pIdentifier:
          .sIdentifier
          @IdentifierExtension
           [ (pNotEqual)
           | *:
           >>
          ;IdentifierExtension
          ] or >
          >>
         ;Factor
         [ (pNotEqual)
         | *:
         ] or >
         >>
        ;Term
        [ (pNotEqual)
        | *:
        ] or >
        >>
       ;SimpleExpression
       [ (pNotEqual)
       | pNotEqual:
       @SimpleExpression
        [ (pInteger)
        | *:
        @Term
         @Factor
          [ (pInteger)
          | pInteger:
          .sInteger
          ] or >
          >>
         ;Factor
         [ (pColon)
         | *:
         ] or >
         >>
        ;Term
        [ (pColon)
        | *:
        ] or >
        >>
       ;SimpleExpression
       .sNE
       ] or >
       >>
      ;Expression
      .sExpnEnd
      .sThen
      ?pColon (pColon)
      @BeginStmt
       .sBegin
       @Statement
        [ (pIdentifier)
        | pIdentifier:
        @AssignmentOrCallStmt
         [ (pElse)
         | *:
         @CallStmt
          .sCallStmt
          .sIdentifier
          [ (pElse)
          | *:
          .sParmEnd
          >>
         ;CallStmt
         >>
        ;AssignmentOrCallStmt
        ] or >
        >>
       ;Statement
       [ (pElse)
       | *:
       ] or >
       .sEnd
       >>
      ;BeginStmt
      [ (pElse)
      | pElse:
      .sElse
      ?pColon (pColon)
      @BeginStmt
       .sBegin
       @Statement
        [ (pIdentifier)
        | pIdentifier:
        @AssignmentOrCallStmt
         [ (pEnd)
         | *:
         @CallStmt
          .sCallStmt
          .sIdentifier
          [ (pEnd)
          | *:
          .sParmEnd
          >>
         ;CallStmt
         >>
        ;AssignmentOrCallStmt
        ] or >
        >>
       ;Statement
       [ (pEnd)
       | *:
       ] or >
       .sEnd
       >>
      ;BeginStmt
      ?pEnd (pEnd)
      ] or >
      >>
     ;IfStmt
     .sEnd
     ] or >
     >>
    ;IfStmt
    ] or >
    >>
   ;Statement
   [ (pEndFile)
   | *:
   ] or >
   .sEnd
   >>
  ;BeginStmt
  >>
 ;Block
 >>
;Program
